/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ic7cc.ovchinnikov.lab1;

import ic7cc.ovchinnikov.lab1.fa.FA;
import ic7cc.ovchinnikov.lab1.tree.ParseTree;
import ic7cc.ovchinnikov.lab1.util.RPNRegex;

import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class App {

    public static void main(String[] args) throws IOException {

        String regex = "((1|2|3|4|5|6|7|8|9)0*)*";

        FA fa = FA.buildDFA(regex);

        System.out.println(fa.match("12345"));
        System.out.println(fa.match("01234"));
        System.out.println(fa.match("32341"));
        System.out.println(fa.match("00000"));
        System.out.println(fa.match("1234567890"));

    }

    private static void testRPN(String regex) {
        System.out.println(RPNRegex.build(regex));
    }

    private static void testMinBigFA() throws IOException {
        FA fa = new FA();
        fa.getAlphabet().add("a");
        fa.getAlphabet().add("b");
        fa.getAlphabet().add("@");

        fa.getStates().add("0");
        fa.getStates().add("1");
        fa.getStates().add("2");
        fa.getStates().add("3");
        fa.getStates().add("4");
        fa.getStates().add("5");
        fa.getStates().add("6");
        fa.getStates().add("7");
        fa.getStates().add("8");
        fa.getStates().add("9");
        fa.getStates().add("10");

        fa.getStart().add("0");
        fa.getEnd().add("10");

        fa.addTrans("0", "1", "@");
        fa.addTrans("0", "7", "@");
        fa.addTrans("1","2", "@");
        fa.addTrans("1", "4", "@");
        fa.addTrans("2", "3", "a");
        fa.addTrans("3", "6", "@");
        fa.addTrans("4", "5", "b");
        fa.addTrans("5", "6", "@");
        fa.addTrans("6", "1", "@");
        fa.addTrans("6", "7", "@");
        fa.addTrans("7", "8", "a");
        fa.addTrans("8", "9", "b");
        fa.addTrans("9", "10", "b");

        fa.printPNG("min/nfa.png");

        FA minFA = FA.det(FA.rec(FA.det(FA.rec(fa))));

        System.out.println("After: ");
        System.out.println("\tMin DFA: " + minFA.getStates());
        System.out.println("\tMin DFA: " + minFA.getTrans());
        System.out.println("\tAlphabet: " + minFA.getAlphabet());
        System.out.println("\tStart: " + minFA.getStart());
        System.out.println("\tEnd: " + minFA.getEnd() + "\n");

        minFA.printPNG("min/dfa.png");
    }

    private static void testMin() {
        FA fa = new FA();
        fa.getAlphabet().add("a");
        fa.getAlphabet().add("@");

        fa.getStates().add("1");
        fa.getStates().add("2");
        fa.getStates().add("3");
        fa.getStates().add("4");

        fa.getStart().add("1");
        fa.getEnd().add("4");

        fa.addTrans("1", "2", "@");
        fa.addTrans("2", "3", "a");
        fa.addTrans("3", "4", "@");

        FA minFA = FA.det(fa);

        System.out.println("After: ");
        System.out.println("\tMin DFA: " + minFA.getStates());
        System.out.println("\tMin DFA: " + minFA.getTrans());
        System.out.println("\tAlphabet: " + minFA.getAlphabet());
        System.out.println("\tStart: " + minFA.getStart());
        System.out.println("\tEnd: " + minFA.getEnd() + "\n");
    }
}
